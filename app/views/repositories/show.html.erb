<div class="container repository-container navbar-hidden">
  <div class="header">
    <div class="breadcrumbs">
      <%= link_to "Repositories", repositories_path %> / <%= @repository.name %>
    </div>
    <div class="actions">
      <% if user_signed_in? %>
        <div class="user-menu compact" data-controller="dropdown">
          <span class="user-name" data-action="click->dropdown#toggle"><%= current_user.name || current_user.email %></span>
          <div class="dropdown-menu" data-dropdown-target="menu">
            <%= link_to "Profile", my_profile_path %>
            <%= link_to "Settings", edit_user_registration_path %>
            <%= button_to "Sign Out", destroy_user_session_path, method: :delete %>
          </div>
        </div>
      <% end %>
      <% if current_user.admin? %>
        <div class="admin-buttons">
          <%= button_to "Sync Repository", sync_repository_path(@repository), method: :post, class: "btn btn-outline" %>
          <%= button_to "Extract Concepts", extract_key_concepts_repository_path(@repository), method: :post, class: "btn btn-outline" %>
        </div>
      <% end %>
    </div>
  </div>

  <div class="repository-content" data-controller="inline-editor tab-manager" 
       data-inline-editor-repository-id-value="<%= @repository.id %>">
    <div class="sidebar">
      <h3><i class="fas fa-folder"></i> Files</h3>
      
      <% if @repository.try(:repository_files).present? %>
        <div class="file-explorer" data-controller="file-explorer" data-file-explorer-repository-id-value="<%= @repository.id %>">
          <div class="file-tree">
            <%# Only the root directory is rendered; subdirectories are loaded on demand %>
            <%= render partial: 'directory_tree', locals: { tree: @directory_structure, level: 0, parent_path: '' } %>
          </div>
        </div>
      <% else %>
        <div class="empty-state">
          <p>No files available yet. Repository may need to be synced.</p>
        </div>
      <% end %>
    </div>
    
    <div class="content">
      <div class="info-panel" data-inline-editor-target="infoPanel" style="height: 100%; overflow-y: auto;">
        <div class="repository-header">
          <% if @repository.github_repo? %>
            <div class="github-info">
              <img src="<%= @repository.github_avatar_url %>" alt="GitHub Avatar" class="github-avatar">
            </div>
          <% end %>
          <h1 class="repository-title"><%= @repository.name %></h1>
          <% if @repository.github_url %>
            <%= link_to @repository.github_url, target: "_blank", class: "github-link-show", title: "View on GitHub" do %>
              <i class="fab fa-github"></i>
            <% end %>
          <% end %>
        </div>
        <p class="repository-description"><%= @repository.description %></p>
        <div class="repository-meta">
          <span class="status"><%= @repository.sync_status %></span>
          <span class="explorers"><i class="fas fa-users"></i> <%= @repository.explorer_count %> <%= @repository.explorer_count == 1 ? 'explorer' : 'explorers' %> active</span>
          <% if @repository.short_commit_hash %>
            <span class="commit-hash">
              <i class="fas fa-code-branch"></i> Commit: 
              <% if @repository.commit_hash_url %>
                <%= link_to @repository.short_commit_hash, @repository.commit_hash_url, target: "_blank", title: "View commit #{@repository.current_commit_hash}" %>
              <% else %>
                <code><%= @repository.short_commit_hash %></code>
              <% end %>
            </span>
          <% end %>
        </div>
        
        <hr class="info-divider">
        
        <!-- Tabs Navigation -->
        <div class="info-tabs">
          <div class="tab-nav">
            <button class="tab-btn active" data-tab="overview" data-action="click->tab-manager#switchTab">Overview</button>
            <button class="tab-btn" data-tab="key-files" data-action="click->tab-manager#switchTab">Key Files</button>
            <button class="tab-btn" data-tab="concepts" data-action="click->tab-manager#switchTab">Concepts</button>
          </div>
          
          <!-- Overview Tab -->
          <div class="tab-content active" id="overview-tab" data-tab-manager-target="tabContent">
            <h2>Your Progress</h2>
            
            <%= turbo_stream_from "repository_#{@repository.id}_progress" %>
            <%= render partial: 'repositories/progress', locals: {
                repository: @repository,
                total_files_count: @total_files_count,
                viewed_files_count: @viewed_files_count,
                files_progress_percentage: @files_progress_percentage,
                key_files_count: @key_files_count,
                viewed_key_files_count: @viewed_key_files_count,
                key_files_progress_percentage: @key_files_progress_percentage
            } %>
          </div>
          
          <!-- Key Files Tab -->
          <div class="tab-content" id="key-files-tab" data-tab-manager-target="tabContent">
            <h2>Key Files</h2>
            <p>These files have been identified as particularly important to understand the codebase:</p>
            
            <% if @key_files_from_concepts.try(:any?) %>
              <div class="key-files-list">
                <% @key_files_from_concepts.each do |file| %>
                  <% viewed = file.present? && @viewed_file_ids.try(:include?, file.id) %>
                  <%= render 'key_file_item', file: file, viewed: viewed %>
                <% end %>
              </div>
            <% else %>
              <div class="key-files-empty">
                <i class="fas fa-key"></i>
                <h3>No key files identified yet</h3>
                <p>
                  Key files are automatically identified when the system analyzes concepts in this repository.
                  <% if current_user.admin? %>
                    Try using the "Extract Concepts" feature or analyzing specific concepts in the Concepts tab.
                  <% else %>
                    They will appear here once they've been identified by the system.
                  <% end %>
                </p>
              </div>
            <% end %>
          </div>
          
          <!-- Concepts Tab -->
          <div class="tab-content" id="concepts-tab" data-tab-manager-target="tabContent">
            <h2>Key Concepts</h2>
            
            <% if current_user.admin? %>
              <div class="concept-analysis-form">
                <div class="form-header">
                  <i class="fas fa-lightbulb"></i>
                  <h3>Analyze New Concepts</h3>
                </div>
                <%= form_tag analyze_concept_repository_path(@repository), method: :post, class: "analyze-concept-form" do %>
                  <div class="form-group">
                    <%= label_tag :concept_name, "Analyze specific concept(s):" %>
                    <%= text_field_tag :concept_name, nil, placeholder: "e.g., mining, consensus, halving (comma-separated for multiple)", class: "form-control" %>
                  </div>
                  <div class="form-group">
                    <%= label_tag :file_paths, "Focus on specific files/directories (optional):" %>
                    <%= text_field_tag :file_paths, nil, placeholder: "e.g., src/consensus/, src/mining/miner.cpp (comma-separated, use / for directories)", class: "form-control" %>
                  </div>
                  <%= submit_tag "Analyze Concept(s)", class: "btn btn-primary" %>
                <% end %>
              </div>
            <% end %>
            
            <% if @key_concepts.try(:any?) %>
              <div class="concepts-grid">
                <% @key_concepts.each do |concept| %>
                  <% not_found = concept.try(:description).to_s.include?("could not be found") || concept.try(:description).to_s.include?("does not appear to be implemented") %>
                  <div class="concept-card <%= 'concept-not-found' if not_found %>">
                    <div class="concept-header">
                      <i class="fas <%= not_found ? 'fa-question-circle' : 'fa-puzzle-piece' %>"></i>
                      <h3><%= concept.try(:name) %></h3>
                    </div>
                    <div class="concept-description">
                      <p><%= concept.try(:description) %></p>
                    </div>
                    <% if not_found %>
                      <div class="concept-help-tip">
                        <div class="help-header">
                          <i class="fas fa-info-circle"></i>
                          <h4>Suggestion</h4>
                        </div>
                        <p>Try limiting your search to specific directories where this concept might be implemented. For example:</p>
                        <code>src/consensus/, src/validation/, src/mining/</code>
                      </div>
                    <% end %>
                    <% if concept.try(:key_files).present? %>
                      <div class="concept-files">
                        <div class="files-header">
                          <i class="fas fa-file-code"></i>
                          <h4>Key Files</h4>
                        </div>
                        <div class="files-list">
                          <% concept.key_files.each do |file_path| %>
                            <% file = @repository.try(:repository_files).try(:find_by, path: file_path) %>
                            <%= render 'concept_file_item', file: file, file_path: file_path, viewed_file_ids: @viewed_file_ids if file_path.present? %>
                          <% end %>
                        </div>
                        <div class="files-explanation">
                          <p><em><%= concept.try(:key_files_explanation) %></em></p>
                        </div>
                      </div>
                    <% end %>
                  </div>
                <% end %>
              </div>
            <% else %>
              <div class="empty-state">
                <i class="fas fa-lightbulb"></i>
                <p>No key concepts identified yet.</p>
                <p>Concepts help you understand the main features and components of this repository.</p>
              </div>
            <% end %>
          </div>
        </div>
      </div>
      
      <div class="editor-container" data-inline-editor-target="editorContainer" style="display: none; flex-direction: column; height: 100%; width: 100%;">
        <!-- Editor content will be dynamically generated -->
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Setup functionality for initial page load
    setupPageInteractions();
  });
  
  document.addEventListener('turbo:load', function() {
    // Setup functionality when navigating via Turbo
    setupPageInteractions();
  });
  
  function setupPageInteractions() {
    // Fix for file explorer folder expansion
    const fileExplorer = document.querySelector('[data-controller="file-explorer"]');
    if (fileExplorer) {
      // Initialize all directories to be collapsed by default
      const directories = fileExplorer.querySelectorAll('.directory');
      directories.forEach(dir => {
        const dirContents = dir.querySelector('.directory-children');
        if (dirContents && !dir.classList.contains('expanded')) {
          dirContents.style.display = 'none';
          dirContents.style.maxHeight = '0';
          dirContents.style.opacity = '0';
        }
      });
      
      // Log the count for debugging
      console.log(`Initialized ${directories.length} directories in file explorer`);
      
      // Add manual click handlers as a fallback
      const directoryLabels = fileExplorer.querySelectorAll('.directory-label');
      directoryLabels.forEach(label => {
        label.addEventListener('click', function(e) {
          e.preventDefault();
          e.stopPropagation();
          
          const directory = this.closest('.directory');
          const dirContents = directory.querySelector('.directory-children');
          const isExpanded = directory.classList.contains('expanded');
          
          // Toggle class
          directory.classList.toggle('expanded');
          this.classList.toggle('expanded');
          
          // Update folder icon
          const folderIcon = this.querySelector('.fa-folder, .fa-folder-open');
          if (folderIcon) {
            if (isExpanded) {
              folderIcon.classList.remove('fa-folder-open');
              folderIcon.classList.add('fa-folder');
            } else {
              folderIcon.classList.remove('fa-folder');
              folderIcon.classList.add('fa-folder-open');
            }
          }
          
          // Update caret icon
          const caretIcon = this.querySelector('.fa-caret-right');
          if (caretIcon) {
            // Set the transform explicitly in both cases
            if (isExpanded) {
              caretIcon.style.transform = 'rotate(0deg)';
            } else {
              caretIcon.style.transform = 'rotate(90deg)';
            }
          }
          
          // Toggle content visibility
          if (dirContents) {
            if (isExpanded) {
              dirContents.style.maxHeight = '0';
              dirContents.style.opacity = '0';
              setTimeout(() => {
                if (!directory.classList.contains('expanded')) {
                  dirContents.style.display = 'none';
                }
              }, 300);
            } else {
              dirContents.style.display = 'block';
              // Force reflow
              void dirContents.offsetHeight;
              dirContents.style.maxHeight = `${dirContents.scrollHeight}px`;
              dirContents.style.opacity = '1';
            }
          }
        });
      });
    }
    
    // Enhanced Tab switching functionality - fallback for non-Stimulus browsers
    // Note: Our Stimulus controller handles this but this is a backup
    const tabButtons = document.querySelectorAll('.tab-btn');
    const tabContents = document.querySelectorAll('.tab-content');
    
    tabButtons.forEach(button => {
      button.addEventListener('click', () => {
        // Only process if this tab isn't already active and not using Stimulus
        if (!button.classList.contains('active') && !button.hasAttribute('data-action')) {
          // Remove active class from all buttons
          tabButtons.forEach(btn => btn.classList.remove('active'));
          
          // Hide all content with fade out first
          tabContents.forEach(content => {
            if (content.classList.contains('active')) {
              content.style.opacity = '0';
              content.style.transform = 'translateY(10px)';
              
              // After short animation, hide and show new content
              setTimeout(() => {
                content.classList.remove('active');
                
                // Show corresponding content for clicked button
                const tabId = button.getAttribute('data-tab');
                const newActiveContent = document.getElementById(`${tabId}-tab`);
                
                // Add active class to clicked button
                button.classList.add('active');
                
                // Show the new content with animation
                newActiveContent.classList.add('active');
                newActiveContent.style.opacity = '0';
                newActiveContent.style.transform = 'translateY(10px)';
                
                // Force reflow to ensure animation works
                void newActiveContent.offsetWidth;
                
                // Start fade in animation
                newActiveContent.style.opacity = '1';
                newActiveContent.style.transform = 'translateY(0)';
              }, 150);
            }
          });
        }
      });
    });
    
    // Enhanced directory tree interaction
    const directoryLabels = document.querySelectorAll('.directory-label');
    
    directoryLabels.forEach(label => {
      label.addEventListener('click', function(event) {
        event.preventDefault();
        event.stopPropagation();
        
        const directory = this.closest('.directory');
        const wasExpanded = directory.classList.contains('expanded');
        
        // Toggle expanded class
        directory.classList.toggle('expanded');
        this.classList.toggle('expanded');
        
        // Update icon for visual feedback
        const folderIcon = this.querySelector('.fa-folder, .fa-folder-open');
        if (folderIcon) {
          if (wasExpanded) {
            folderIcon.classList.remove('fa-folder-open');
            folderIcon.classList.add('fa-folder');
          } else {
            folderIcon.classList.remove('fa-folder');
            folderIcon.classList.add('fa-folder-open');
          }
        }
      });
    });
    
    // Mark files as viewed when clicked with visual feedback
    document.addEventListener('click', function(event) {
      const fileLink = event.target.closest('a[data-file-id]');
      if (fileLink) {
        // Add viewed class for styling
        fileLink.classList.add('viewed-file');
        
        // Dispatch event to expand directories to this file
        const filePath = fileLink.getAttribute('data-path');
        if (filePath) {
          document.dispatchEvent(new CustomEvent('expand-to-file', {
            detail: { path: filePath }
          }));
        }
      }
    });
    
    // Enhanced expand-to-file functionality to automatically open directories to a file
    document.addEventListener('expand-to-file', function(event) {
      const path = event.detail.path;
      const parts = path.split('/');
      let currentPath = '';
      
      // Process each directory in the path
      for (let i = 0; i < parts.length - 1; i++) {
        currentPath += (i > 0 ? '/' : '') + parts[i];
        const dirLabel = document.querySelector(`.directory-label[data-path="${currentPath}"]`);
        
        if (dirLabel) {
          const directory = dirLabel.closest('.directory');
          
          // Only expand if not already expanded
          if (!directory.classList.contains('expanded')) {
            // Trigger click to expand
            dirLabel.click();
          }
        }
      }
      
      // Highlight the target file
      setTimeout(() => {
        const fileLink = document.querySelector(`a[data-path="${path}"]`);
        if (fileLink) {
          fileLink.classList.add('highlight-file');
          fileLink.scrollIntoView({ behavior: 'smooth', block: 'center' });
          
          // Remove highlight after a delay
          setTimeout(() => {
            fileLink.classList.remove('highlight-file');
          }, 2000);
        }
      }, 300);
    });
    
    // Handle URL hash for file navigation
    setTimeout(() => {
      // Get hash from URL if present (e.g., #file=src/main.cpp)
      const hash = window.location.hash;
      if (hash && hash.startsWith('#file=')) {
        const filePath = decodeURIComponent(hash.substring(6));
        
        // First expand to the file
        document.dispatchEvent(new CustomEvent('expand-to-file', {
          detail: { path: filePath }
        }));
        
        // Then find and click the file link
        setTimeout(() => {
          const fileLinks = document.querySelectorAll(`a[data-path="${filePath}"]`);
          if (fileLinks.length > 0) {
            fileLinks[0].click();
          }
        }, 500); // Give time for directories to expand
      }
    }, 300);
    
    // Add a highlight animation for the file-item class
    document.head.insertAdjacentHTML('beforeend', `
      <style>
        @keyframes highlightPulse {
          0% { background-color: rgba(99, 102, 241, 0); }
          50% { background-color: rgba(99, 102, 241, 0.2); }
          100% { background-color: rgba(99, 102, 241, 0); }
        }
        
        .highlight-file {
          animation: highlightPulse 1.5s ease;
        }
      </style>
    `);
  }
</script>

<style>
  body {
    overflow-y: auto;
    overflow-x: hidden;
    height: 100vh;
    margin: 0;
    padding: 0;
    background-color: #0A0A23; /* Dark navy background */
    color: #F5F7FA; /* Light text color */
  }
  
  /* Hide main navbar when this class is present */
  body:has(.navbar-hidden) .main-header {
    display: none;
  }
  
  /* Increase available space when navbar is hidden */
  .navbar-hidden {
    max-width: 98vw;
    width: 98vw;
    height: calc(100vh - 20px); /* More space without navbar */
    padding: 0 1rem 20px;
    display: flex;
    flex-direction: column;
    overflow-y: auto;
    overflow-x: hidden;
    margin-bottom: 0;
    margin-left: auto;
    margin-right: auto;
    box-sizing: border-box;
  }

  /* Adjust repository content height */
  .navbar-hidden .repository-content {
    height: calc(100vh - 70px); /* More space without navbar */
    box-sizing: border-box;
  }
  
  /* Also adjust the sidebar and file explorer heights */
  .navbar-hidden .sidebar {
    height: 100%;
    max-height: calc(100vh - 70px);
  }
  
  .navbar-hidden .file-explorer {
    max-height: calc(100vh - 113px); /* 70px for container + 43px for header */
  }
  
  /* Compact user menu for header */
  .user-menu.compact {
    margin-left: 0;
  }
  
  .user-menu.compact .user-name {
    background: linear-gradient(135deg, #4F46E5 0%, #7C3AED 100%);
    padding: 0.5rem 1rem;
    border-radius: 50px;
    box-shadow: 0 4px 8px rgba(67, 56, 202, 0.3);
    font-size: 0.9rem;
    font-weight: 500;
    color: white;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
    display: inline-block;
  }
  
  .user-menu.compact .user-name:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 12px rgba(67, 56, 202, 0.4);
  }
  
  .header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid rgba(99, 102, 241, 0.3);
  }
  
  .breadcrumbs {
    font-size: 1rem;
    color: var(--text-tertiary, rgba(255, 255, 255, 0.7));
  }
  
  .breadcrumbs a {
    color: var(--text-accent, #A5B4FC);
    text-decoration: none;
    transition: all 0.2s ease;
  }
  
  .breadcrumbs a:hover {
    color: var(--primary-purple, #6366F1);
    text-decoration: underline;
  }
  
  .actions {
    display: flex;
    gap: 1rem;
    align-items: center;
  }
  
  .admin-buttons {
    display: flex;
    gap: 10px;
  }
  
  .admin-buttons .btn {
    padding: 8px 16px;
    background-color: rgba(30, 30, 56, 0.5);
    color: var(--text-accent, #A5B4FC);
    border: 1px solid rgba(99, 102, 241, 0.3);
    border-radius: 50px;
    font-size: 14px;
    font-weight: 500;
    transition: all 0.2s ease;
  }
  
  .admin-buttons .btn:hover {
    background-color: rgba(99, 102, 241, 0.2);
    border-color: rgba(99, 102, 241, 0.5);
    transform: translateY(-2px);
  }
  
  .repository-content {
    display: grid;
    grid-template-columns: 280px minmax(0, 1fr);
    gap: 1rem;
    overflow: hidden;
    width: 100%;
    height: calc(100vh - 140px);
    box-sizing: border-box;
  }
  
  .content {
    background-color: #1E1E3F; /* Dark purple */
    border-radius: var(--border-radius);
    padding: 1rem 1rem 1rem; /* Reduced padding */
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
    height: 100%;
    overflow-y: auto;
    overflow-x: hidden;
    display: flex;
    flex-direction: column;
    width: 100%;
    box-sizing: border-box;
    max-width: 100%;
  }
  
  .info-panel {
    max-width: 100%;
    overflow-y: auto;
    width: 100%;
    background: linear-gradient(135deg, #0F172A 0%, #1E293B 100%);
    border-radius: 16px;
    box-shadow: 0 12px 32px rgba(0, 0, 0, 0.5), 0 2px 8px rgba(0, 0, 0, 0.3);
    border: 1px solid rgba(99, 102, 241, 0.2);
    padding: 20px;
    color: rgba(255, 255, 255, 0.9);
    transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
    box-sizing: border-box;
  }
  
  .editor-container {
    height: 100%;
    display: flex;
    flex-direction: column;
    overflow-y: auto;
    overflow-x: hidden;
    width: 100%;
  }
  
  .editor-header {
    margin-bottom: 1rem;
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    flex-shrink: 0;
  }
  
  .file-title-container {
    display: flex;
    align-items: center;
    gap: 1.25rem;
  }
  
  .back-button {
    display: flex;
    align-items: center;
    gap: 0.6rem;
    background: linear-gradient(135deg, var(--primary-dark-purple, #4F46E5) 0%, var(--accent-purple, #7C3AED) 100%);
    color: white;
    border: none;
    border-radius: 50px;
    padding: 0.6rem 1rem;
    cursor: pointer;
    font-size: 0.9rem;
    font-weight: 500;
    transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
    box-shadow: 0 4px 8px rgba(67, 56, 202, 0.3);
    font-family: 'Inter', sans-serif;
    position: relative;
    overflow: hidden;
  }
  
  .back-button:hover {
    transform: translateY(-2px) scale(1.02);
    box-shadow: 0 6px 12px rgba(67, 56, 202, 0.4);
  }
  
  .back-button:hover .back-icon {
    transform: scale(1.15);
  }
  
  .back-button:active {
    transform: translateY(1px);
    box-shadow: 0 2px 4px rgba(67, 56, 202, 0.2);
  }
  
  .back-icon {
    flex-shrink: 0;
    transition: transform 0.3s ease;
    color: rgba(255, 255, 255, 0.9);
    width: 17px;
    height: 17px;
  }
  
  
  .back-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transform: translateX(-100%);
    transition: transform 0.5s ease;
  }
  
  .back-button:hover::before {
    transform: translateX(100%);
  }
  
  .file-title {
    margin: 0;
    font-size: 1.2rem;
    font-weight: 600;
    word-break: break-all;
    color: var(--text-primary, #F8F8F2);
    font-family: 'Sora', sans-serif;
  }
  
  .repository-header {
    display: flex;
    align-items: center;
    gap: 15px;
    margin-bottom: 1rem;
    width: 100%;
    box-sizing: border-box;
    flex-wrap: wrap;
  }
  
  .github-info {
    display: flex;
    align-items: center;
    margin-right: 5px;
  }
  
  .github-avatar {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    border: 2px solid rgba(99, 102, 241, 0.3);
    object-fit: cover;
    background-color: #ffffff;
    flex-shrink: 0;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
  }
  
  .github-avatar:hover {
    transform: scale(1.05);
    border-color: rgba(99, 102, 241, 0.5);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
  }
  
  .github-link-show {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: rgba(99, 102, 241, 0.2);
    color: var(--text-primary, #F8F8F2);
    border: 1px solid rgba(99, 102, 241, 0.3);
    transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
    font-size: 1.3rem;
    text-decoration: none;
  }
  
  .github-link-show:hover {
    background-color: rgba(99, 102, 241, 0.3);
    transform: translateY(-2px);
    box-shadow: 0 8px 16px rgba(67, 56, 202, 0.3);
    color: var(--text-primary, #F8F8F2);
    text-decoration: none;
  }
  
  .repository-description {
    margin-bottom: 1rem;
    color: var(--text-secondary, rgba(255, 255, 255, 0.9));
    line-height: 1.5;
    width: 100%;
    box-sizing: border-box;
    overflow-wrap: break-word;
    word-wrap: break-word;
  }
  
  .repository-meta {
    color: var(--text-tertiary, rgba(255, 255, 255, 0.7));
    font-size: 0.9rem;
    margin-bottom: 1.5rem;
    display: flex;
    flex-direction: column;
    gap: 8px;
  }
  
  .repository-meta .explorers {
    display: flex;
    align-items: center;
  }
  
  .repository-meta .explorers i {
    margin-right: 8px;
    color: var(--primary-light-purple, #A78BFA);
  }
  
  .repository-meta .commit-hash {
    display: flex;
    align-items: center;
  }
  
  .repository-meta .commit-hash i {
    margin-right: 8px;
    color: var(--primary-light-purple, #A78BFA);
  }
  
  .repository-meta .commit-hash a {
    text-decoration: none;
  }
  
  .repository-meta .commit-hash a:hover {
    text-decoration: none;
    color: var(--primary-purple, #6366F1);
  }
  
  .repository-meta .commit-hash code {
    color: var(--text-accent, #A5B4FC);
    font-family: 'Fira Code', monospace;
    margin-left: 4px;
    font-size: 0.9rem;
  }
  
  .status {
    display: inline-flex;
    align-items: center;
    background: rgba(99, 102, 241, 0.15);
    border: 1px solid rgba(99, 102, 241, 0.3);
    color: var(--text-accent, #A5B4FC);
    border-radius: 50px;
    padding: 4px 10px;
    font-size: 12px;
    font-weight: 500;
    width: fit-content;
  }
  
  .info-divider {
    border: 0;
    height: 1px;
    background-color: rgba(99, 102, 241, 0.3);
    margin: 1.5rem 0;
  }
  
  /* Tab styles */
  .info-tabs {
    margin-top: 1.5rem;
    width: 100%;
  }
  
  .tab-nav {
    display: flex;
    border-bottom: 1px solid rgba(99, 102, 241, 0.3);
    margin-bottom: 1.5rem;
    gap: 0.5rem;
    overflow-x: auto;
    padding-bottom: 1px;
  }
  
  .tab-btn {
    background: transparent;
    border: none;
    padding: 0.75rem 1.5rem;
    font-weight: 600;
    color: var(--text-tertiary, rgba(255, 255, 255, 0.7));
    font-size: 1rem;
    cursor: pointer;
    position: relative;
    transition: all 0.2s ease;
    border-radius: 8px 8px 0 0;
    white-space: nowrap;
    font-family: 'Sora', sans-serif;
  }
  
  .tab-btn:hover {
    color: var(--text-primary, #F8F8F2);
    background-color: rgba(99, 102, 241, 0.1);
  }
  
  .tab-btn.active {
    color: var(--primary-purple, #6366F1);
    background: rgba(99, 102, 241, 0.1);
  }
  
  .tab-btn.active::after {
    content: '';
    position: absolute;
    bottom: -1px;
    left: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, var(--primary-purple, #6366F1), var(--accent-purple, #7C3AED));
    border-radius: 2px 2px 0 0;
  }
  
  .tab-content {
    display: none;
    animation: fadeIn 0.3s ease;
  }
  
  .tab-content.active {
    display: block;
  }
  
  .info-panel h2 {
    color: var(--text-headers, #A78BFA);
    margin-top: 20px;
    margin-bottom: 10px;
    font-weight: 600;
    font-size: 20px;
    padding-bottom: 8px;
    font-family: 'Sora', sans-serif;
  }
  
  .info-panel h3 {
    font-size: 18px;
    margin: 14px 0 8px 0;
    color: var(--text-secondary, rgba(255, 255, 255, 0.9));
    font-weight: 600;
    font-family: 'Sora', sans-serif;
  }
  
  .progress-section {
    margin: 1rem 0 1.5rem;
    width: 100%;
    box-sizing: border-box;
  }
  
  .progress-metric {
    margin-bottom: 1rem;
    width: 100%;
    box-sizing: border-box;
  }
  
  .progress-label {
    display: flex;
    justify-content: space-between;
    margin-bottom: 0.5rem;
    font-weight: 500;
    color: var(--text-secondary, rgba(255, 255, 255, 0.9));
    width: 100%;
    box-sizing: border-box;
  }
  
  .progress-value {
    color: var(--text-tertiary, rgba(255, 255, 255, 0.7));
    font-weight: normal;
    white-space: nowrap;
  }
  
  .progress-bar-container {
    height: 8px;
    background-color: rgba(30, 30, 56, 0.5);
    border-radius: 4px;
    overflow: hidden;
    margin-bottom: 0.25rem;
    border: 1px solid rgba(99, 102, 241, 0.1);
    width: 100%;
    box-sizing: border-box;
  }
  
  .progress-bar {
    height: 100%;
    background: linear-gradient(135deg, #4F46E5 0%, #7C3AED 100%);
    border-radius: 4px;
    transition: width 0.3s ease;
  }
  
  .progress-bar-key {
    background: linear-gradient(135deg, #6366F1 0%, #A78BFA 100%);
  }
  
  .progress-percentage {
    text-align: right;
    font-size: 0.9rem;
    color: var(--text-tertiary, rgba(255, 255, 255, 0.7));
  }
  
  .key-files-list {
    margin-top: 10px;
    border: 1px solid rgba(99, 102, 241, 0.3);
    border-radius: 8px;
    padding: 15px;
    background-color: rgba(30, 30, 56, 0.5);
  }
  
  .key-file-item {
    padding: 6px 0;
    display: flex;
    align-items: center;
    width: 100%;
    box-sizing: border-box;
  }
  
  .key-file-star {
    color: var(--primary-light-purple, #A78BFA);
    margin-right: 8px;
    font-size: 1.1rem;
    flex-shrink: 0;
  }
  
  .key-file-item a {
    color: var(--text-accent, #A5B4FC);
    text-decoration: none;
    overflow: hidden;
    text-overflow: ellipsis;
    transition: all 0.2s ease;
    max-width: calc(100% - 30px);
    word-break: break-all;
  }
  
  .key-file-item a:hover {
    color: var(--primary-purple, #6366F1);
    text-decoration: none;
  }
  
  .key-file-note {
    margin-top: 10px;
    padding-top: 8px;
    border-top: 1px dashed rgba(99, 102, 241, 0.3);
    font-style: italic;
    color: var(--text-tertiary, rgba(255, 255, 255, 0.7));
  }
  
  .key-concepts {
    margin-top: 2rem;
    border: 1px solid rgba(99, 102, 241, 0.2);
    border-radius: 16px;
    padding: 20px;
    background: linear-gradient(90deg, #1E1E38 0%, #2D1E69 100%);
    box-shadow: 0 12px 32px rgba(0, 0, 0, 0.5), 0 2px 8px rgba(0, 0, 0, 0.3);
    width: 100%;
    box-sizing: border-box;
    overflow: hidden;
  }
  
  .key-concepts h2 {
    margin-top: 0;
    margin-bottom: 1rem;
    color: var(--text-headers, #A78BFA);
    border-bottom: 1px solid rgba(99, 102, 241, 0.3);
    padding-bottom: 8px;
    width: 100%;
    box-sizing: border-box;
  }
  
  .key-concepts ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
    width: 100%;
    box-sizing: border-box;
  }
  
  .key-concepts li {
    margin-bottom: 1.5rem;
    padding-bottom: 1.5rem;
    border-bottom: 1px dashed rgba(99, 102, 241, 0.3);
    width: 100%;
    box-sizing: border-box;
    overflow-wrap: break-word;
    word-wrap: break-word;
  }
  
  .key-concepts li.concept-not-found {
    background-color: rgba(231, 76, 60, 0.1);
    border-left: 3px solid #e74c3c;
  }
  
  .key-concepts li.concept-not-found strong {
    color: #e74c3c;
  }
  
  .key-concepts li.concept-not-found p {
    color: var(--text-secondary, rgba(255, 255, 255, 0.9));
    font-style: italic;
  }
  
  .key-concepts li:last-child {
    border-bottom: none;
    margin-bottom: 0;
    padding-bottom: 0;
  }
  
  .key-concepts strong {
    color: var(--primary-purple, #6366F1);
    font-size: 1.1rem;
    display: block;
    margin-bottom: 0.5rem;
    font-family: 'Sora', sans-serif;
    font-weight: 600;
  }
  
  .key-concepts p {
    margin-bottom: 0.75rem;
    color: var(--text-secondary, rgba(255, 255, 255, 0.9));
  }
  
  .key-concepts small {
    display: block;
    margin-top: 0.5rem;
    color: var(--primary-light-purple, #A78BFA);
    width: 100%;
    box-sizing: border-box;
    overflow-wrap: break-word;
    word-wrap: break-word;
  }
  
  .key-concepts em {
    color: var(--text-tertiary, rgba(255, 255, 255, 0.7));
    font-size: 0.9rem;
    display: block;
    margin-top: 0.25rem;
    width: 100%;
    box-sizing: border-box;
    overflow-wrap: break-word;
    word-wrap: break-word;
  }
  
  .concept-file-link {
    color: var(--text-accent, #A5B4FC);
    text-decoration: none;
    transition: all 0.2s ease;
    overflow-wrap: break-word;
    word-wrap: break-word;
    word-break: break-all;
  }
  
  .concept-file-link:hover {
    color: var(--primary-purple, #6366F1);
    text-decoration: underline;
  }
  
  .concept-file-link.viewed-file {
    color: var(--success-color, #2ecc71);
  }
  
  .concept-help-tip {
    background-color: rgba(30, 30, 56, 0.5);
    border: 1px solid rgba(99, 102, 241, 0.3);
    border-radius: 8px;
    padding: 12px;
    margin: 10px 0;
    width: 100%;
    box-sizing: border-box;
    overflow-wrap: break-word;
    word-wrap: break-word;
  }
  
  .concept-help-tip p {
    margin-bottom: 8px;
    font-size: 0.9rem;
  }
  
  .concept-help-tip code {
    background-color: rgba(30, 30, 56, 0.8);
    padding: 2px 6px;
    border-radius: 4px;
    font-family: 'Fira Code', monospace;
    font-size: 13px;
    color: var(--text-accent, #A5B4FC);
    border: 1px solid rgba(99, 102, 241, 0.2);
    max-width: 100%;
    overflow-wrap: break-word;
    word-wrap: break-word;
    white-space: pre-wrap;
  }
  
  .concept-analysis-form {
    margin-bottom: 1.5rem;
    padding: 20px;
    background: linear-gradient(135deg, var(--navy-dark, #0F172A) 0%, var(--deep-purple, #1E1E38) 100%);
    border: 1px solid rgba(99, 102, 241, 0.2);
    border-radius: 12px;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
  }
  
  .analyze-concept-form {
    display: flex;
    flex-direction: column;
    gap: 16px;
  }
  
  .analyze-concept-form .form-group {
    width: 100%;
  }
  
  .analyze-concept-form label {
    display: block;
    margin-bottom: 8px;
    color: var(--text-secondary, rgba(255, 255, 255, 0.9));
    font-size: 14px;
    font-weight: 500;
  }
  
  .analyze-concept-form input[type="text"] {
    width: 100%;
    padding: 12px 16px;
    background-color: rgba(30, 30, 56, 0.5);
    border: 1px solid rgba(99, 102, 241, 0.3);
    border-radius: 8px;
    color: white;
    font-size: 14px;
    transition: all 0.2s ease;
  }
  
  .analyze-concept-form input[type="text"]:focus {
    border-color: var(--primary-purple, #6366F1);
    background-color: rgba(30, 30, 56, 0.8);
    outline: none;
    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.25);
  }
  
  .analyze-concept-form input[type="text"]::placeholder {
    color: rgba(255, 255, 255, 0.4);
  }
  
  .analyze-concept-form .btn {
    align-self: flex-end;
    min-width: 150px;
    padding: 8px 16px;
    background: linear-gradient(135deg, #4F46E5 0%, #7C3AED 100%);
    color: white;
    border-radius: 50px;
    border: none;
    box-shadow: 0 8px 16px rgba(67, 56, 202, 0.3);
    font-weight: 600;
    font-size: 16px;
    font-family: 'Sora', sans-serif;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
    position: relative;
    overflow: hidden;
  }
  
  .analyze-concept-form .btn:hover {
    transform: translateY(-4px) scale(1.05);
    box-shadow: 0 12px 20px rgba(67, 56, 202, 0.4);
  }
  
  /* Shine effect on hover */
  .analyze-concept-form .btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, 
      rgba(255, 255, 255, 0) 0%, 
      rgba(255, 255, 255, 0.2) 50%, 
      rgba(255, 255, 255, 0) 100%);
    transition: left 0.6s;
    z-index: 1;
  }
  
  .analyze-concept-form .btn:hover::before {
    left: 100%;
  }
  
  /* Empty state */
  .empty-state {
    text-align: center;
    padding: 3rem 2rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    border-radius: 12px;
    margin: 1.5rem 0;
  }
  
  .empty-state i {
    font-size: 2.5rem;
    color: var(--primary-light-purple, #A78BFA);
    margin-bottom: 1rem;
    opacity: 0.7;
  }
  
  .empty-state p:first-of-type {
    font-size: 1.2rem;
    font-weight: 500;
    margin-bottom: 0.5rem;
  }
  
  .empty-state p:last-of-type {
    color: var(--text-tertiary, rgba(255, 255, 255, 0.7));
  }
  
  .directory turbo-frame {
    display: none;
  }
  .directory.expanded > turbo-frame {
    display: block;
  }
  
  .sidebar {
    background-color: #1E1E3F;
    border-radius: 8px;
    padding: 0;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
    height: 100%;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    min-height: 0; /* Important for Firefox */
    min-width: 0; /* Important for Firefox */
    width: 280px; /* Fixed width to match grid definition */
    box-sizing: border-box;
  }
  
  .sidebar h3 {
    color: #F5F7FA;
    margin: 0;
    padding: 12px;
    border-bottom: 1px solid #333;
    flex-shrink: 0;
    width: 100%;
    box-sizing: border-box;
  }
  
  .file-explorer {
    flex: 1;
    overflow: hidden;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    height: calc(100% - 43px); /* Height of sidebar minus h3 height */
    min-height: 0; /* Important for Firefox */
    width: 100%;
  }
  
  .file-tree {
    flex: 1;
    overflow-y: auto;
    overflow-x: hidden;
    padding: 8px 12px 12px 12px;
    margin: 0;
    height: 100%;
    max-height: 100%;
    width: 100%;
    box-sizing: border-box;
  }
  
  /* Monaco editor specific styles */
  #monaco-container {
    flex: 1;
    min-height: 500px;
    height: calc(100% - 80px);  /* Reduce the space taken by header/footer */
    border: 1px solid #333;
    border-radius: 4px;
    overflow-y: auto;
    overflow-x: hidden;
    width: 100%;
    max-width: 100%;
  }
</style>
